{
	"$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
	"name": "GTSTRUDL",
	"patterns": [
		{
			"include": "#keywords"
		},
		{
			"include": "#comments"
		},
		{
			"include": "#strings"
		},
		{
			"include": "#variables"
		},
		{
			"include": "#constants"
		}
	],
	"repository": {
		"keywords": {
			"patterns": [
				{
					"include": "#general-commands"
				},
				{
					"include": "#database-commands"
				},
				{
					"include": "#geometry-commands"
				},
				{
					"include": "#boundary-condition-commands"
				},
				{
					"include": "#member-and-finite-element-commands"
				},
				{
					"include": "#constants-commands"
				},
				{
					"include": "#static-loading-commands"
				},
				{
					"include": "#load-combinations-and-static-analysis-commands"
				}
			]
		},
		"comments": {
			"patterns": [
				{
					"name": "comment.line.dollar-sign.gtstrudl",
					"begin": "\\$",
					"end": "\n"
				}
			]
		},
		"strings": {
			"patterns": [
				{
					"name": "string.quoted.single.gtstrudl",
					"begin": "'",
					"end": "'"
				},
				{
					"name": "string.quoted.double.gtstrudl",
					"begin": "\"",
					"end": "\""
				}
			]
		},
		"variables":{
			"patterns": [{
					"name": "variable.language.gtstrudl",
					"match": "\\b(?i)(X|Y|Z|AX|AY|AZ|IX|IY|IZ|\\W +S)\\b"
				}
			]
		},
		"constants":{
			"patterns": [
				{
					"name": "constant.numeric.integer.gtstrudl",
					"match": "\\b[+-]?\\d+\\b"
				},
				{
					"name": "constant.numeric.float.gtstrudl",
					"match": "\\b[+-]?\\d+\\.\\d*\\b"
				},
				{
					"name": "constant.character.linebreak.gtstrudl",
					"match": " -"
				},
				{
					"name": "constant.language.units.gtstrudl",
					"match": "\\b(?i)(IN[CHES]{0,4}|(FT|FEET)|CM|M|MM|LBS|KIP|TON|MTON|KG|N|KN|MN|RAD[IANS]{0,4}|DEG[RES]{0,4}|CYC[LES]{0,3}|FAH[RENHIT]{0,7}|CEN[TIGRADE]{0,7}|SEC[ONDS]{0,4}|MIN[UTES]{0,4}|HOU[RS]{0,2}|STAN[DAR]{0,4}|STDM[AS]{0,3}|GRAM|KGM|MTMN)\\b"
				}
			]
		},
		"database-commands":{
			"patterns": [
				{
					"name": "keyword.save.gtstrudl",
					"match": "\\b(?i)SAVE\\b"
				},
				{
					"name": "keyword.restore.gtstrudl",
					"match": "\\b(?i)RESTORE\\b"
				},
				{
					"name": "keyword.automatic-backup.gtstrudl",
					"match": "\\b(?i)AUTO[MATIC]{0,5} BACK[UP]{0,2} (ON( INT[ERVAL]{0,5}){0,1}|OFF){1}\\b"
				},
				{
					"name": "keyword.additions.gtstrudl",
					"match": "\\b(?i)ADD[ITIONS]{0,6}\\b"
				},
				{
					"name": "keyword.changes.gtstrudl",
					"match": "\\b(?i)CHA[NGES]{0,4}\\b"
				},
				{
					"name": "keyword.deletions.gtstrudl",
					"match": "\\b(?i)DEL[ETIONS]{0,6}\\b"
				},
				{
					"name": "keyword.active-inactive.gtstrudl",
					"match": "\\b(?i)(ACT[IVE]{0,3}|INACT[IVE]{0,3}){1} (JOI[NTS]{0,3}|MEM[BERS]{0,4}|ELEM[ENTS]{0,4}|LOA[DS]{0,2}|MOD[ES]{0,2}){1} (ALL BUT|ALL){1}\\b"
				},
				{
					"name": "keyword.loading-list.gtstrudl",
					"match": "\\b(?i)LOA[DING]{0,4} LIS[T]{0,1} (ALL BUT|ALL){1}\\b"
				}
			]
		},
		"general-commands":{
			"patterns": [
				{
					"name": "keyword.strudl.gtstrudl",
					"match": "\\b(?i)STRUDL\\b"
				},
				{
					"name": "keyword.finish.gtstrudl",
					"match": "\\b(?i)FIN[ish]{0,3}\\b"
				},
				{
					"name": "keyword.cinput.gtstrudl",
					"match": "\\b(?i)CINPUT( STA[NDARD]{0,5}| RES[UME]{0,3}){0,1}\\b"
				},
				{
					"name": "keyword.coutput.gtstrudl",
					"match": "\\b(?i)COUTPUT( APP[END]{0,3}| REP[LACE]{0,4}| STA[NDARD]{0,5}){0,1}\\b"
				},
				{
					"name": "keyword.flist.gtstrudl",
					"match": "\\b(?i)FLIST\\b"
				},
				{
					"name": "keyword.scan.gtstrudl",
					"match": "\\b(?i)SCAN( ON| OFF){1}\\b"
				},
				{
					"name": "keyword.bypass.gtstrudl",
					"match": "\\b(?i)BYPASS\\b"
				},
				{
					"name": "keyword.units.gtstrudl",
					"match": "\\b(?i)UNI[ts]{0,2}\\b"
				},
				{
					"name": "keyword.query.gtstrudl",
					"match": "\\b(?i)QUERY\\b"
				},
				{
					"name": "keyword.define-group.gtstrudl",
					"match": "\\b(?i)DEFINE (GRO[up]{0,2}|GRP)\\b"
				},
				{
					"name": "keyword.print-group.gtstrudl",
					"match": "\\b(?i)PRI[nt]{0,2} GRO[up]{0,2}\\b"
				},
				{
					"name": "keyword.print-generate.gtstrudl",
					"match": "\\b(?i)PRI[NT]{0,2} GEN[ERATE]{0,5} (ON|OFF)\\b"
				},
				{
					"name": "keyword.consistency-check.gtstrudl",
					"match": "\\b(?i)CON[SISTENCY]{0,8} CHE[CK]{0,2}( RED[UCE]{0,3} BAND){0,1}\\b"
				}
			]
		},
		"geometry-commands":{
			"patterns": [
				{
					"name": "keyword.joint-coordinates.gtstrudl",
					"match": "\\b(?i)(JOI[NT]{0,2} COO[RDINATES]{0,8}( CAR[TESIAN]{0,6}| CYL[INDRCAL]{0,8}){0,1}|OFF[SET]{0,3})\\b"
				},
				{
					"name": "keyword.generate-n-joints.gtstrdl",
					"match": "\\b(?i)GEN[ERAT]{0,5} \\d JOI[NTS]{0,3}( CAR[TESIAN]{0,6}| CYL[INDRCAL]{0,8}){0,1}\\b"
				},
				{
					"name": "keyword.delete-joints.gtstrudl",
					"match": "\\b(?i)DEL[ET]{0,3} JOI[NTS]{0,3} WIT[HOUT]{0,4} (JOI[NT]{0,2} ){0,1}COO[RDINATES]{0,8}\\b"
				},
				{
					"name": "keyword.type-command.gtstrudl",
					"match": "\\b(?i)TYP[E]{0,1} ((PLA[NE]{0,2} (TRU[S]{0,2}|FRA[ME]{0,2}|GRI[D]{0,1})|SPA[CE]{0,2} (TRU[S]{0,2}|FRA[ME]{0,2}))|PLA[NE]{0,2} (STRE[S]{0,2}|STRA[IN]{0,2})|PLATE|TRI[DIMENSIONAL]{0,11}|AXI[SYMMETRIC]{0,9} STR[ES]{0,3})\\b"
				},
				{
					"name": "keyword.member-element-incidences.gtstrudl",
					"match": "\\b(?i)(MEM[BER]{0,3}|ELE[MENT]{0,4}){1} INC[IDENCES]{0,7}\\b"
				},
				{
					"name": "keyword.generate-members.gtstrudl",
					"match": "\\b(?i)GEN[ERATE]{0,5} \\d+ MEM[BERS]{0,4}\\b"
				},
				{
					"name": "keyword.generate-elements.gtstrudl",
					"match": "\\b(?i)GEN[ERATE]{0,5} \\d+ ELE[MENTS]{0,5}\\b"
				},
				{
					"name": "keyword.delete-members.gtstrudl",
					"match": "\\b(?i)DEL[ET]{0,3} MEM[BERS]{0,4} WIT[HOUT]{0,4} (MEM[BER]{0,3} ){0,1}INC[IDENCES]{0,7}\\b"
				},
				{
					"name": "keyword.delete-elements.gtstrudl",
					"match": "\\b(?i)DEL[ET]{0,3} (FINI[TE]{0,2} ){0,1}ELE[MENTS]{0,5} WIT[HOUT]{0,4} (ELE[MENT]{0,4} ){0,1}INC[IDENCES]{0,7}\\b"
				},
				{
					"name": "keyword.define-object.gtstrudl",
					"match": "\\b(?i)DEF[INE]{0,3} OBJ[ECT]{0,3}\\b"
				},
				{
					"name": "keyword.print-object.gtstrudl",
					"match": "\\b(?i)PRI[NT]{0,2} OBJ[ECT]{0,3}\\b"
				},
				{
					"name": "keyword.move-object.gtstrudl",
					"match": "\\b(?i)MOV[E]{0,1} OBJ[ECT]{0,3}\\b"
				},
				{
					"name": "keyword.copy-object.gtstrudl",
					"match": "\\b(?i)COPY OBJ[ECT]{0,3}\\b"
				},
				{
					"name": "keyword.locate-interference-joints.gtstrudl",
					"match": "\\b(?i)LOC[ATE]{0,3} INT[ERERENCE]{0,8} JOI[NTS]{0,3}( TOL[ERANCE]{0,6}){0,1}\\b"
				},
				{
					"name": "keyword.locate-duplicate-joints.gtstrudl",
					"match": "\\b(?i)LOC[ATE]{0,3} DUP[LICATE]{0,6} JOI[NTS]{0,3}( TOL[ERANCE]{0,6}){0,1}( AND){0,1}( REM[OVE]{0,3}){0,1}\\b"
				}
			]
		},
		"boundary-condition-commands":{
			"patterns":[
				{
					"name": "keyword.status.gtstrudl",
					"match": "\\b(?i)STA[TUS]{0,3} (F[REE]{0,3}|S[UPPORT]{0,6}|G[LOBAL]{0,5}|P[LANAR]{0,5}){1}( JOI[NTS]{0,3}){0,1}\\b"
				},
				{
					"name": "keyword.determine-planar-joints.gtstrudl",
					"match": "\\b(?i)DETE[RMINE]{0,5} PLA[NAR]{0,3}( JOI[NTS]{0,3}( TOL[ERANCE]{0,6}){0,1}){0,1}\\b"
				},
				{
					"name": "keyword.joint-releases.gtstrudl",
					"match": "\\b(?i)JOINT RELEASES\\b"
				},
				{
					"name": "keyword.calculate-soil-spring-values.gtstrudl",
					"match": "\\b(?i)CALC[ULATE]{0,5}( SOIL){0,1} SPR[ING]{0,3}( VAL[UES]{0,3}){0,1}(COM[PRESSION]{0,8}( ONLY){0,1}( NO( SUP[PPORT]{0,5}){0,1}( CHE[CK]{0,2}){0,1}){0,1} DIR[ECTION]{0,6} (X|Y|Z){1}( \\d){0,1}( (PLA[NE]{0,2} ){0,1}TOL[ERANCE]{0,6} \\d){0,1}( PLA[NE]{0,2} )ANG[LE]{0,2}( TOL[ERANCE]{0,6} \\d){0,1} (KS \\d ELE[MENTS]{0,5})+( APP[LY]{0,2}){0,1}( SHO[W]{0,1}( CAL[CS]{0,2}){0,1}){0,1}( INP[LANE]{0,4}( RAT[IO]{0,2}){0,1} \\d){0,1})\\b"
				},
				{
					"name": "keyword.member-releases.gtstrudl",
					"match": "\\b(?i)MEM[BER]{0,3} REL[EASES]{0,5}\\b"
				},
				{
					"name": "keyword.member-eccentricities.gtstrudl",
					"match": "\\b(?i)MEM[BER]{0,3} ECC[ENTRICITIES]{0,11}\\b"
				}
			]
		},
		"member-and-finite-element-commands":{
			"patterns":[
				{
					"name": "keyword.member-properties.gtstrudl",
					"match": "\\b(?i)MEM[BER]{0,3} PROP[ERTIES]{0,6} (T[ABLE]{0,4}|PRI[SMATIC]{0,6}|VAR[IABLE]{0,5}|I-SH[APE]{0,3}|PLA[TE]{0,2} GIR[DER]{0,3}|PIP[E]{0,1}|CHA[NNEL]{0,4}|POL[YGONAL]{0,6}( TUB[E]{0,1}){0,1})\\b"
				},
				{
					"name": "keyword.element-properties.gtstrudl",
					"match": "\\b(?i)ELEM[ENT]{0,3} PROP[ERTIES]{0,6}\\b"
				},
				{
					"name": "keyword.material.gtstrudl",
					"match": "\\b(?i)MATER[IAL]{0,3} (ALU[MINUM]{0,5}|CON[CRETE]{0,5}|STE[EL]{0,2}){1} (ALL( MEM[BERS]{0,4}){0,1}|MEM[BERS]{0,4}){1}\\b"
				},
				
				{
					"name": "keyword.calculate-eccentric-member-beta-angles.gtstrudl",
					"match": "\\b(?i)CALC[ULATE]{0,5} ECC[ENTRIC]{0,6}( MEM[BER]{0,3}){0,1}( BET[A]{0,1}){0,1}( ANG[LES]{0,3}){0,1}( WIT[HOUT]{0,4} COM[MAND]{0,4}( LIS[TING]{0,4}){0,1}){0,1}\\b"
				},
				{
					"name": "keyword.beta-reference-joint.gtstrudl",
					"match": "\\b(?i)BETA REF[ERENCE]{0,6}( JOI[NT]{0,2}){0,1}\\b"
				},
				{
					"name": "keyword.calculate-memory-orientation.gtstrudl",
					"match": "\\b(?i)CA[CULATE]{0,6} MEM[BER]{0,3} ORI[ENTATION]{0,8}( AX[IS]{0,2}( Y| Z){0,1}){0,1}( FRO[M]{0,1}){0,1}( VEC[TOR]{0,3}){0,1} (X \\d|Y \\d|Z \\d)+ MEM[BER]{0,3}\\b"
				}
			]
		},
		"constants-commands":{
			"patterns":[
				{
					"name": "keyword.constants.gtstrudl",
					"match": "\\b(?i)CON[STANTS]{0,6}\\b"
				},
				{
					"name": "keyword.elastic-modulus.gtstrudl",
					"match": "\\b(?i)E\\b"
				},
				{
					"name": "keyword.shear-modulus.gtstrudl",
					"match": "\\b(?i)G\\b"
				},
				{
					"name": "keyword.poissons-ratio.gtstrudl",
					"match": "\\b(?i)POI[SSON]{0,4}\\b"
				},
				{
					"name": "keyword.coefficient-of-thermal-expansion.gtstrudl",
					"match": "\\b(?i)CTE\\b"
				},
				{
					"name": "keyword.density.gtstrudl",
					"match": "\\b(?i)DEN[SITY]{0,4}\\b"
				},
				{
					"name": "keyword.beta-angle.gtstrudl",
					"match": "\\b(?i)BET[A]?\\b"
				},
				{
					"name": "keyword.member-application.gtstrudl",
					"match": "\\b(?i)(All ?BUT ?\\d?(MEM[BER]{0,3})?|ALL ?(MEM[BERS]{0,4})?|MEM[BERS]{0,4})\\b"
				},
				{
					"name": "keyword.range-indicator.gtstrudl",
					"match": "\\b(?i)TO\\b"
				}
			]
		},
		"static-loading-commands":{
			"patterns":[
				{
					"name": "keyword.loading.gtstrudl",
					"match": "\\b(?i)LOA[DING]{0,4}\\b"
				},
				{
					"name": "keyword.self-weight-loading.gtstrudl",
					"match": "\\b(?i)(SELF +WEI[GHT]{0,3} +LOA[DING]{0,4}|DIR[ECTION]{0,6}|FAC[TOR]{0,3}|INCLUDE ?(F[INITE]{0,5})? ?(E[LEMENTS]{0,7}))\\b"
				},
				{
					"name": "keyword.dead-loading.gtstrudl",
					"match": "\\b(?i)(DEAD +LOA[DING]{0,4}|DIR[ECTION]{0,6}|FAC[TOR]{0,3}|INCLUDE ?(F[INITE]{0,5})? ?(E[LEMENTS]{0,7}))\\b"
				},
				{
					"name": "keyword.joint-load.gtstrudl",
					"match": "\\b(?i)JO[INT]{0,3} LOA[DS]{0,2}\\b"
				},
				{
					"name": "keyword.joint-load-list.gtstrudl",
					"match": "\\b(?i)(FOR[CE]{0,2}|MOM[ENT]{0,3})\\b"
				},
				{
					"name": "keyword.joint-displacements.gtstrudl",
					"match": "\\b(?i)JO[INT]{0,3} DIS[PLACEMENTS]{0,10}\\b"
				},
				{
					"name": "keyword.joint-displacement-list.gtstrudl",
					"match": "\\b(?i)(DIS[PLACEMENT]{0,9}|ROT[ATION]{0,5})\\b"
				},
				{
					"name": "keyword.member-loads.gtstrudl",
					"match": "\\b(?i)MEM[BER]{0,3} LOA[DS]{0,2}\\b"
				},
				{
					"name": "keyword.member-load-direction-spec.gtstrudl",
					"match": "\\b(?i)(FOR[CE]{0,2}|MOM[ENT]{0,3}) [XYZ] ?((GLO[BAL]{0,3})?( ?PRO[JECTED]{0,6})?)?\\b"
				},
				{
					"name": "keyword.concentrated-force.gtstrudl",
					"match": "\\b(?i)CON[CENTRATED]{0,9} ?(FR[ACTIONAL]{0,8})?\\b"
				},
				{
					"name": "keyword.uniform-force.gtstrudl",
					"match": "\\b(?i)UNI[FORM]{0,4} ?(FR[ACTIONAL]{0,8})?\\b"
				},
				{
					"name": "keyword.linear-force.gtstrudl",
					"match": "\\b(?i)LIN[EAR]{0,3} ?(FR[ACTIONAL]{0,8})?\\b"
				},
				{
					"name": "keyword.optional-loading-data-labels.gtstrudl",
					"match": "\\b(?i)(P|M|W|WA|L|LA|LB)\\b"
				},
				{
					"name": "keyword.loading-combination.gtstrudl",
					"match": "\\b(?i)(LOA[DING]{0,4} COM[BINATION]{0,8}|SPE[CIFICATIONS]{0,116})\\b"
				}
			]
		}
	},
	"scopeName": "source.gti"
}
